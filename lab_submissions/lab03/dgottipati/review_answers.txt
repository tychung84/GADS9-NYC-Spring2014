1) list

2) yellow_orange

3) 2/5 = 0, float(2)/float(5) = 0.4

4-1) data type of 'tweet' -- dict
4-2) data type of 'date' -- datetime.datetime
4-3) printing the text of the tweet -- print tweet['text']
4-4) average of some_values -- 99.89
sum(some_values)/float(len(some_values))

5) function that caculates mean
def average(l):
    return sum(l)/float(len(l))

6) a*b = [[ 1 4 9]
 [16 25 36]]

7)Why does a.dot(b) fail? Why does a.dot(c) work?
a.dot(b) fails as the two arrays are not aligned.
for multiplcation of a and b to work:
# columns in a (here its 3) != # rows in b (here its 2 rows),

a.dot(c) works because the rule mentioned above holds.
# of columns in a (=3) == # of rows in c (=3)

8)np.dot(a, c)
array([[22, 28],
       [49, 64]])
9) Is np.dot(a, c) the same as a.dot(c)? Why or why not?
Yes. You are essentially doing the same dot function on both a and c

10) Is np.dot(a, c) the same as np.dot(c, a)? Why or why not?
No. As the reverse will result in an array with different row/column lengths.`
